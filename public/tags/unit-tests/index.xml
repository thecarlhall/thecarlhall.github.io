<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unit-Tests on Carlibrated!</title><link>https://thecarlhall.github.io/tags/unit-tests/</link><description>Recent content in Unit-Tests on Carlibrated!</description><generator>Hugo</generator><language>en</language><managingEditor>carl@halls.farm (Carl Hall)</managingEditor><webMaster>carl@halls.farm (Carl Hall)</webMaster><lastBuildDate>Thu, 25 Mar 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://thecarlhall.github.io/tags/unit-tests/index.xml" rel="self" type="application/rss+xml"/><item><title>Unit Testing with HttpClient's LocalTestServer</title><link>https://thecarlhall.github.io/post/unit-testing-with-httpclients-localtestserver/</link><pubDate>Thu, 25 Mar 2010 00:00:00 +0000</pubDate><author>carl@halls.farm (Carl Hall)</author><guid>https://thecarlhall.github.io/post/unit-testing-with-httpclients-localtestserver/</guid><description>&lt;p>When unit testing code that uses HttpClient, it can get a bit tricky to not test against a active web server. Â There are a couple of approaches to this to keep your tests at the unit level.&lt;/p>
&lt;ol>
&lt;li>Mock and inject HttpClient &amp;ndash; While this is certainly possible and gives you complete control, it can take a lot of mocking and get tedious quite quickly.&lt;/li>
&lt;li>Use LocalTestServer from HttpClient &amp;ndash; This is the point of this post and I will now explain.&lt;/li>
&lt;/ol>
&lt;p>Let&amp;rsquo;s take a look at the basic setup for getting this test server up.&lt;/p></description></item></channel></rss>